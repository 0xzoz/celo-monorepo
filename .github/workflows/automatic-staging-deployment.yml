name: Release to Staging

on:
  push:
    branches:
      - emilhotkowski/release-process

jobs:
  Release-to-Staging:
    runs-on: ubuntu-latest
    environment: Staging

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - id: files
        uses: jitterbit/get-changed-files@v1
        name: Retrieve all changed files from the push
      - id: changedPackages
        name: Generate list of changed packages
        shell: bash
        run: |
          changed_packages=()

          for changed_file in ${{ steps.files.outputs.all }}; do

            #check if changed file is under "packages/" folder
            if [[ $changed_file == packages* ]]; then

              #extract packge name
              package_name=`sudo echo ${changed_file} | sed 's/packages\/\([^ \/]*\).*/\1/'`

              changed_packages+=($package_name)
            fi
          done
          dedup_changed_packages=( $(printf '%s\n' "${changed_packages[@]}" | sort -u) )

          echo "::set-output name=changed_packages::${dedup_changed_packages[@]}"
      - name: Release to staging
        shell: bash
        run: |
          for changed_package in ${{steps.changedPackages.outputs.changed_packages}}
          do
            echo "*** Releasing ${changed_package} package ***"
            chmod +x packages/${changed_package}/release/deployment.sh
            ./packages/${changed_package}/release/deployment.sh
          done
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          ENV_NAME: "STAGING"
          NETWORK: "testnet"