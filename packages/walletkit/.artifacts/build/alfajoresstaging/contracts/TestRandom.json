{
  "contractName": "TestRandom",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        },
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "random",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "randomness",
          "type": "bytes32"
        },
        {
          "name": "newCommitment",
          "type": "bytes32"
        },
        {
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "revealAndCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setRandomnessBlockRetentionWindow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "name": "computeCommitment",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "randomnessBlockRetentionWindow",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "name": "exponent",
          "type": "uint256"
        },
        {
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockRandomness",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_randomnessBlockRetentionWindow",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RandomnessBlockRetentionWindowSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "name": "addTestRandomness",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "name": "cur",
          "type": "uint256"
        }
      ],
      "name": "getTestRandomness",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "randomness",
          "type": "bytes32"
        },
        {
          "name": "newCommitment",
          "type": "bytes32"
        },
        {
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "testRevealAndCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"randomness\",\"type\":\"bytes32\"},{\"name\":\"newCommitment\",\"type\":\"bytes32\"},{\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"testRevealAndCommit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"blsKey\",\"type\":\"bytes\"},{\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"randomness\",\"type\":\"bytes32\"},{\"name\":\"newCommitment\",\"type\":\"bytes32\"},{\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"revealAndCommit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"addTestRandomness\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setRandomnessBlockRetentionWindow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"computeCommitment\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomnessBlockRetentionWindow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"cur\",\"type\":\"uint256\"}],\"name\":\"getTestRandomness\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"name\":\"exponent\",\"type\":\"uint256\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockRandomness\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_randomnessBlockRetentionWindow\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RandomnessBlockRetentionWindowSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"return\":\"True upon success.\"},\"computeCommitment(bytes32)\":{\"params\":{\"randomness\":\"The value for which the commitment hash is computed.\"},\"return\":\"Commitment parameter.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"return\":\"numerator/denominator of the computed quantity (not reduced).\"},\"getBlockNumberFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Block number.\"},\"getBlockRandomness(uint256)\":{\"params\":{\"blockNumber\":\"The number of block whose randomness value we want to know.\"},\"return\":\"The associated randomness value.\"},\"getEpochNumber()\":{\"return\":\"Current epoch number.\"},\"getEpochNumberOfBlock(uint256)\":{\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"return\":\"Epoch number.\"},\"getEpochSize()\":{\"return\":\"The current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve. Must be within 4 epochs of the current number.\"},\"return\":\"Bitmap parent seal with set bits at indices corresponding to signing validators.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Bitmap parent seal with set bits at indices correspoinding to signing validators.\"},\"hashHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Header hash.\"},\"initialize(uint256)\":{\"params\":{\"_randomnessBlockRetentionWindow\":\"Number of old random blocks whose randomness values can be queried.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\"},\"minQuorumSizeInCurrentSet()\":{\"return\":\"Byzantine quorum of validators.\"},\"numberValidatorsInCurrentSet()\":{\"return\":\"Size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\"},\"return\":\"Size of the validator set.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"random()\":{\"return\":\"Returns the current randomness value.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revealAndCommit(bytes32,bytes32,address)\":{\"details\":\"If the Random contract is pointed to by the Registry, the first transaction in a block should be a special transaction to address 0x0 with 64 bytes of data - the concatenated `randomness` and `newCommitment`. Before running regular transactions, this function should be called.\",\"params\":{\"newCommitment\":\"The hash of randomness that will be revealed in the future.\",\"proposer\":\"Address of the block proposer.\",\"randomness\":\"Bytes that will be added to the entropy pool.\"}},\"setRandomnessBlockRetentionWindow(uint256)\":{\"params\":{\"value\":\"Number of old random blocks whose randomness values can be queried.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\",\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"}}},\"userdoc\":{\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"computeCommitment(bytes32)\":{\"notice\":\"Compute the commitment hash for a given randomness value.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getBlockNumberFromHeader(bytes)\":{\"notice\":\"Parses block number out of header.\"},\"getBlockRandomness(uint256)\":{\"notice\":\"Get randomness values of previous blocks.\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"notice\":\"Gets the parent seal bitmap from the header at the given block number.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"notice\":\"Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails.\"},\"hashHeader(bytes)\":{\"notice\":\"Computes hash of header.\"},\"initialize(uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInCurrentSet()\":{\"notice\":\"Gets the size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"notice\":\"Gets the size of the validator set that must sign the given block number.\"},\"random()\":{\"notice\":\"Querying the current randomness value.\"},\"revealAndCommit(bytes32,bytes32,address)\":{\"notice\":\"Implements step of the randomness protocol.\"},\"setRandomnessBlockRetentionWindow(uint256)\":{\"notice\":\"Sets the number of old random blocks whose randomness values can be queried.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator address from the current validator set.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"notice\":\"Gets a validator address from the validator set at the given block number.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol\":\"TestRandom\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/CalledByVm.sol\":{\"keccak256\":\"0xf08651202725d365655c9bba1d7a7d73ca91a07271baecbbd906d6e2e0f732ec\",\"urls\":[\"bzzr://1bc031b5c44f1224e5531b91774ac9d187c54f633b7a3cfc869eec701bbcf9f3\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xde9244bb7f97bb88c3baed0d0493da42f0b5c6cc05d295bfd3e570745996453a\",\"urls\":[\"bzzr://ff5098f98a204e3e2258f5d84edef49c280ade6f0328b69eab87dd218bedbb98\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/UsingPrecompiles.sol\":{\"keccak256\":\"0x15e54dc1e696c1a4020b57ddf1312b342792fe4b5d2437b7139957c98cfc76c5\",\"urls\":[\"bzzr://2da7b684b3da453f7058328c8be764685cc784f42ef67ca4c373b2c51cae9055\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol\":{\"keccak256\":\"0x2e998c93e8bbc8b486d7ce315c9fec4ed4f7a0b0104d32732ee264b3c596f372\",\"urls\":[\"bzzr://b1d5e312dddad20a8a8176756066cb57f61c4ec4be65744806106f4cad4ea3b5\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xf8470783201987bcae377bb928d7c632cac43f9eb971693d0c5db9b533853a6a\",\"urls\":[\"bzzr://f1452cc34aa553ae029634ff7c1a4a1a8765b249b321fab547093d794a6fc805\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol\":{\"keccak256\":\"0x7acabc47cbb2f1086501e656f80c65976dab034cb11832f92c5ad4505e5649c7\",\"urls\":[\"bzzr://c0d4435cdecd80231a9d4c92e52c4e3056bd40a5eb0ea770811af255589590fa\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]}},\"version\":1}",
  "bytecode": "0x608060405260006100146100b760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100bf565b600033905090565b6130c7806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638da5cb5b1161010f578063e50e652d116100a2578063f2fde38b11610071578063f2fde38b14610b50578063fae8db0a14610b94578063fc48472614610bd6578063fe4b84df14610c18576101e5565b8063e50e652d146109ef578063e626642514610a31578063e8fcf72314610a7d578063ec68307214610ad5576101e5565b80639b2b592f116100de5780639b2b592f1461092f578063c387742b14610971578063df4da461146109b3578063e45def95146109d1576101e5565b80638da5cb5b146108775780638f32d59b146108c157806392e5d98f146108e35780639a7b3be714610911576101e5565b80635ec01e4d1161018757806375832efc1161015657806375832efc146106fa57806387ca71661461075257806387ee8a0f1461078a5780638a883626146107a8576101e5565b80635ec01e4d146105e557806367960e9114610603578063715018a6146106d25780637385e5da146106dc576101e5565b806323f0ab65116101c357806323f0ab65146102d25780633b1eb4bf1461045c5780634b2c2f441461049e5780635d180adb1461056d576101e5565b80630c0dd6c1146101ea578063123633ea14610242578063158ef93e146102b0575b600080fd5b6102406004803603606081101561020057600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c46565b005b61026e6004803603602081101561025857600080fd5b8101908080359060200190929190505050610c56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b8610da7565b604051808215151515815260200191505060405180910390f35b610442600480360360608110156102e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561032557600080fd5b82018360208201111561033757600080fd5b8035906020019184600183028401116401000000008311171561035957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103bc57600080fd5b8201836020820111156103ce57600080fd5b803590602001918460018302840111640100000000831117156103f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610dba565b604051808215151515815260200191505060405180910390f35b6104886004803603602081101561047257600080fd5b8101908080359060200190929190505050610f73565b6040518082815260200191505060405180910390f35b610557600480360360208110156104b457600080fd5b81019080803590602001906401000000008111156104d157600080fd5b8201836020820111156104e357600080fd5b8035906020019184600183028401116401000000008311171561050557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f8d565b6040518082815260200191505060405180910390f35b6105a36004803603604081101561058357600080fd5b810190808035906020019092919080359060200190929190505050611121565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105ed611273565b6040518082815260200191505060405180910390f35b6106bc6004803603602081101561061957600080fd5b810190808035906020019064010000000081111561063657600080fd5b82018360208201111561064857600080fd5b8035906020019184600183028401116401000000008311171561066a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611284565b6040518082815260200191505060405180910390f35b6106da611418565b005b6106e4611551565b6040518082815260200191505060405180910390f35b6107506004803603606081101561071057600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611561565b005b6107886004803603604081101561076857600080fd5b810190808035906020019092919080359060200190929190505050611613565b005b610792611621565b6040518082815260200191505060405180910390f35b610861600480360360208110156107be57600080fd5b81019080803590602001906401000000008111156107db57600080fd5b8201836020820111156107ed57600080fd5b8035906020019184600183028401116401000000008311171561080f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611768565b6040518082815260200191505060405180910390f35b61087f6118fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108c9611925565b604051808215151515815260200191505060405180910390f35b61090f600480360360208110156108f957600080fd5b8101908080359060200190929190505050611983565b005b610919611a97565b6040518082815260200191505060405180910390f35b61095b6004803603602081101561094557600080fd5b8101908080359060200190929190505050611aa7565b6040518082815260200191505060405180910390f35b61099d6004803603602081101561098757600080fd5b8101908080359060200190929190505050611bf0565b6040518082815260200191505060405180910390f35b6109bb611c20565b6040518082815260200191505060405180910390f35b6109d9611d5c565b6040518082815260200191505060405180910390f35b610a1b60048036036020811015610a0557600080fd5b8101908080359060200190929190505050611d62565b6040518082815260200191505060405180910390f35b610a6760048036036040811015610a4757600080fd5b810190808035906020019092919080359060200190929190505050611dad565b6040518082815260200191505060405180910390f35b610abf60048036036020811015610a9357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc1565b6040518082815260200191505060405180910390f35b610b33600480360360c0811015610aeb57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611dd9565b604051808381526020018281526020019250505060405180910390f35b610b9260048036036020811015610b6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fed565b005b610bc060048036036020811015610baa57600080fd5b8101908080359060200190929190505050612073565b6040518082815260200191505060405180910390f35b610c0260048036036020811015610bec57600080fd5b81019080803590602001909291905050506121bc565b6040518082815260200191505060405180910390f35b610c4460048036036020811015610c2e57600080fd5b81019080803590602001909291905050506121cf565b005b610c51838383612282565b505050565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310610ccf5780518252602082019150602081019050602083039250610cac565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610d2f576040519150601f19603f3d011682016040523d82523d6000602084013e610d34565b606091505b50809350819250505080610d93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612e6f603d913960400191505060405180910390fd5b610d9e82600061256a565b92505050919050565b600060149054906101000a900460ff1681565b60008060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310610e435780518252602082019150602081019050602083039250610e20565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610e945780518252602082019150602081019050602083039250610e71565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610efd5780518252602082019150602081019050602083039250610eda565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610f5d576040519150601f19603f3d011682016040523d82523d6000602084013e610f62565b606091505b505080915050809150509392505050565b6000610f8682610f81611c20565b612581565b9050919050565b60006060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b60208310610fe25780518252602082019150602081019050602083039250610fbf565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106110495780518252602082019150602081019050602083039250611026565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146110a9576040519150601f19603f3d011682016040523d82523d6000602084013e6110ae565b606091505b5080935081925050508061110d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612e376038913960400191505060405180910390fd5b6111188260006125b9565b92505050919050565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831061119a5780518252602082019150602081019050602083039250611177565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146111fa576040519150601f19603f3d011682016040523d82523d6000602084013e6111ff565b606091505b5080935081925050508061125e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612ee16036913960400191505060405180910390fd5b61126982600061256a565b9250505092915050565b600061127f434361264a565b905090565b60006060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106112d957805182526020820191506020810190506020830392506112b6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310611340578051825260208201915060208101905060208303925061131d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146113a0576040519150601f19603f3d011682016040523d82523d6000602084013e6113a5565b606091505b50809350819250505080611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806130446023913960400191505060405180910390fd5b61140f8260006125b9565b92505050919050565b611420611925565b611492576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061155c43611d62565b905090565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920564d2063616e2063616c6c0000000000000000000000000000000081525060200191505060405180910390fd5b61160e838383612282565b505050565b61161d8282612765565b5050565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611692578051825260208201915060208101905060208303925061166f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146116f2576040519150601f19603f3d011682016040523d82523d6000602084013e6116f7565b606091505b50809350819250505080611756576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180612eac6035913960400191505060405180910390fd5b61176182600061256a565b9250505090565b60006060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106117bd578051825260208201915060208101905060208303925061179a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106118245780518252602082019150602081019050602083039250611801565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611884576040519150601f19603f3d011682016040523d82523d6000602084013e611889565b606091505b508093508192505050806118e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806130136031913960400191505060405180910390fd5b6118f382600061256a565b92505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119676128b5565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61198b611925565b6119fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008111611a56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612dde602c913960400191505060405180910390fd5b806002819055507f337b24e614d34558109f3dee80fbcb3c5a4b08a6611bee45581772f64d1681e5816040518082815260200191505060405180910390a150565b6000611aa243610f73565b905090565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611b185780518252602082019150602081019050602083039250611af5565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611b78576040519150601f19603f3d011682016040523d82523d6000602084013e611b7d565b606091505b50809350819250505080611bdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612d8a602e913960400191505060405180910390fd5b611be782600061256a565b92505050919050565b60008160405160200180828152602001915050604051602081830303815290604052805190602001209050919050565b60006060600060f873ffffffffffffffffffffffffffffffffffffffff166040516020016040516020818303038152906040526040518082805190602001908083835b60208310611c865780518252602082019150602081019050602083039250611c63565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611ce6576040519150601f19603f3d011682016040523d82523d6000602084013e611ceb565b606091505b50809350819250505080611d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612f876025913960400191505060405180910390fd5b611d5582600061256a565b9250505090565b60025481565b6000611da66003611d986002611d8a6002611d7c88611aa7565b6128bd90919063ffffffff16565b61294390919063ffffffff16565b6129cb90919063ffffffff16565b9050919050565b6000611db9838361264a565b905092915050565b60016020528060005260406000206000915090505481565b60008060008714158015611dee575060008514155b611e60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310611efa5780518252602082019150602081019050602083039250611ed7565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611f5a576040519150601f19603f3d011682016040523d82523d6000602084013e611f5f565b606091505b50809250819350505081611fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612f606027913960400191505060405180910390fd5b611fc981600061256a565b9350611fd681602061256a565b925083839550955050505050965096945050505050565b611ff5611925565b612067576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61207081612a15565b50565b60006060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120e457805182526020820191506020810190506020830392506120c1565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612144576040519150601f19603f3d011682016040523d82523d6000602084013e612149565b606091505b508093508192505050806121a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612fe7602c913960400191505060405180910390fd5b6121b38260006125b9565b92505050919050565b60006121c8824361264a565b9050919050565b600060149054906101000a900460ff1615612252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061227633612a15565b61227f81611983565b50565b61228e6000801b611bf0565b821415612303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f63616e6e6f7420636f6d6d6974207a65726f2072616e646f6d6e65737300000081525060200191505060405180910390fd5b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612452576000801b8314156123a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180612fac603b913960400191505060405180910390fd5b60006123b384611bf0565b9050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811461244c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612e0a602d913960400191505060405180910390fd5b506124ae565b6000801b83146124ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180612d4e603c913960400191505060405180910390fd5b5b60008043146124d0576124cb600143612b5990919063ffffffff16565b6124d3565b60005b905061252043600360008481526020019081526020016000205486604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120612765565b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600061257683836125b9565b60001c905092915050565b60008082848161258d57fe5b049050600083858161259b57fe5b0614156125ab57809150506125b3565b600181019150505b92915050565b60006020820183511015612635576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b6000818311156126a5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612f386028913960400191505060405180910390fd5b6006548314806126f457506126c560055483612b5990919063ffffffff16565b831180156126f35750816002541015806126f257506126ef60025483612b5990919063ffffffff16565b83115b5b5b612749576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806130676035913960400191505060405180910390fd5b6003600084815260200190815260200160002054905092915050565b8060036000848152602001908152602001600020819055506000612787611c20565b838161278f57fe5b0614156127c85760045460065410156127bc57600360006006548152602001908152602001600020600090555b816006819055506128b1565b600060055414156127e7578160048190555060016005819055506128b0565b6002546005541115612859576127fe600454612ba3565b61281c612817600160045461294390919063ffffffff16565b612ba3565b612832600260045461294390919063ffffffff16565b60048190555061284e6001600554612b5990919063ffffffff16565b6005819055506128af565b600254600554141561289157612870600454612ba3565b612886600160045461294390919063ffffffff16565b6004819055506128ae565b6128a7600160055461294390919063ffffffff16565b6005819055505b5b5b5b5050565b600033905090565b6000808314156128d0576000905061293d565b60008284029050828482816128e157fe5b0414612938576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f176021913960400191505060405180910390fd5b809150505b92915050565b6000808284019050838110156129c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612a0d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612bc7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612db86026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000612b9b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c8d565b905092915050565b6006548114612bc45760036000828152602001908152602001600020600090555b50565b60008083118290612c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c38578082015181840152602081019050612c1d565b50505050905090810190601f168015612c655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612c7f57fe5b049050809150509392505050565b6000838311158290612d3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612cff578082015181840152602081019050612ce4565b50505050905090810190601f168015612d2c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe72616e646f6d6e6573732073686f756c64206265207a65726f206966207468657265206973206e6f2070726576696f757320636f6d6d69746d656e746572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737372616e646f6d6e657373426c6f636b5265746574696f6e57696e646f772063616e6e6f74206265207a65726f636f6d6d69746d656e74206469646e2774206d617463682074686520706f737465642072616e646f6d6e6573736572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e6e6f742071756572792072616e646f6d6e657373206f662066757475726520626c6f636b736572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c6572616e646f6d6e6573732063616e6e6f74206265207a65726f20696620746865726520697320612070726576696f757320636f6d6d69746d656e746572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c656572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e67206861736848656164657220707265636f6d70696c6543616e6e6f742071756572792072616e646f6d6e657373206f6c646572207468616e207468652073746f72656420686973746f7279a165627a7a723058208d8b0bfd20cdd460017dc5d9c009f68f1025a219b8c7c53bdf26662ab43809ff0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80638da5cb5b1161010f578063e50e652d116100a2578063f2fde38b11610071578063f2fde38b14610b50578063fae8db0a14610b94578063fc48472614610bd6578063fe4b84df14610c18576101e5565b8063e50e652d146109ef578063e626642514610a31578063e8fcf72314610a7d578063ec68307214610ad5576101e5565b80639b2b592f116100de5780639b2b592f1461092f578063c387742b14610971578063df4da461146109b3578063e45def95146109d1576101e5565b80638da5cb5b146108775780638f32d59b146108c157806392e5d98f146108e35780639a7b3be714610911576101e5565b80635ec01e4d1161018757806375832efc1161015657806375832efc146106fa57806387ca71661461075257806387ee8a0f1461078a5780638a883626146107a8576101e5565b80635ec01e4d146105e557806367960e9114610603578063715018a6146106d25780637385e5da146106dc576101e5565b806323f0ab65116101c357806323f0ab65146102d25780633b1eb4bf1461045c5780634b2c2f441461049e5780635d180adb1461056d576101e5565b80630c0dd6c1146101ea578063123633ea14610242578063158ef93e146102b0575b600080fd5b6102406004803603606081101561020057600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c46565b005b61026e6004803603602081101561025857600080fd5b8101908080359060200190929190505050610c56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b8610da7565b604051808215151515815260200191505060405180910390f35b610442600480360360608110156102e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561032557600080fd5b82018360208201111561033757600080fd5b8035906020019184600183028401116401000000008311171561035957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103bc57600080fd5b8201836020820111156103ce57600080fd5b803590602001918460018302840111640100000000831117156103f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610dba565b604051808215151515815260200191505060405180910390f35b6104886004803603602081101561047257600080fd5b8101908080359060200190929190505050610f73565b6040518082815260200191505060405180910390f35b610557600480360360208110156104b457600080fd5b81019080803590602001906401000000008111156104d157600080fd5b8201836020820111156104e357600080fd5b8035906020019184600183028401116401000000008311171561050557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f8d565b6040518082815260200191505060405180910390f35b6105a36004803603604081101561058357600080fd5b810190808035906020019092919080359060200190929190505050611121565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105ed611273565b6040518082815260200191505060405180910390f35b6106bc6004803603602081101561061957600080fd5b810190808035906020019064010000000081111561063657600080fd5b82018360208201111561064857600080fd5b8035906020019184600183028401116401000000008311171561066a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611284565b6040518082815260200191505060405180910390f35b6106da611418565b005b6106e4611551565b6040518082815260200191505060405180910390f35b6107506004803603606081101561071057600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611561565b005b6107886004803603604081101561076857600080fd5b810190808035906020019092919080359060200190929190505050611613565b005b610792611621565b6040518082815260200191505060405180910390f35b610861600480360360208110156107be57600080fd5b81019080803590602001906401000000008111156107db57600080fd5b8201836020820111156107ed57600080fd5b8035906020019184600183028401116401000000008311171561080f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611768565b6040518082815260200191505060405180910390f35b61087f6118fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108c9611925565b604051808215151515815260200191505060405180910390f35b61090f600480360360208110156108f957600080fd5b8101908080359060200190929190505050611983565b005b610919611a97565b6040518082815260200191505060405180910390f35b61095b6004803603602081101561094557600080fd5b8101908080359060200190929190505050611aa7565b6040518082815260200191505060405180910390f35b61099d6004803603602081101561098757600080fd5b8101908080359060200190929190505050611bf0565b6040518082815260200191505060405180910390f35b6109bb611c20565b6040518082815260200191505060405180910390f35b6109d9611d5c565b6040518082815260200191505060405180910390f35b610a1b60048036036020811015610a0557600080fd5b8101908080359060200190929190505050611d62565b6040518082815260200191505060405180910390f35b610a6760048036036040811015610a4757600080fd5b810190808035906020019092919080359060200190929190505050611dad565b6040518082815260200191505060405180910390f35b610abf60048036036020811015610a9357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc1565b6040518082815260200191505060405180910390f35b610b33600480360360c0811015610aeb57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611dd9565b604051808381526020018281526020019250505060405180910390f35b610b9260048036036020811015610b6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fed565b005b610bc060048036036020811015610baa57600080fd5b8101908080359060200190929190505050612073565b6040518082815260200191505060405180910390f35b610c0260048036036020811015610bec57600080fd5b81019080803590602001909291905050506121bc565b6040518082815260200191505060405180910390f35b610c4460048036036020811015610c2e57600080fd5b81019080803590602001909291905050506121cf565b005b610c51838383612282565b505050565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310610ccf5780518252602082019150602081019050602083039250610cac565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610d2f576040519150601f19603f3d011682016040523d82523d6000602084013e610d34565b606091505b50809350819250505080610d93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612e6f603d913960400191505060405180910390fd5b610d9e82600061256a565b92505050919050565b600060149054906101000a900460ff1681565b60008060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310610e435780518252602082019150602081019050602083039250610e20565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610e945780518252602082019150602081019050602083039250610e71565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610efd5780518252602082019150602081019050602083039250610eda565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610f5d576040519150601f19603f3d011682016040523d82523d6000602084013e610f62565b606091505b505080915050809150509392505050565b6000610f8682610f81611c20565b612581565b9050919050565b60006060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b60208310610fe25780518252602082019150602081019050602083039250610fbf565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106110495780518252602082019150602081019050602083039250611026565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146110a9576040519150601f19603f3d011682016040523d82523d6000602084013e6110ae565b606091505b5080935081925050508061110d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612e376038913960400191505060405180910390fd5b6111188260006125b9565b92505050919050565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831061119a5780518252602082019150602081019050602083039250611177565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146111fa576040519150601f19603f3d011682016040523d82523d6000602084013e6111ff565b606091505b5080935081925050508061125e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612ee16036913960400191505060405180910390fd5b61126982600061256a565b9250505092915050565b600061127f434361264a565b905090565b60006060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106112d957805182526020820191506020810190506020830392506112b6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310611340578051825260208201915060208101905060208303925061131d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146113a0576040519150601f19603f3d011682016040523d82523d6000602084013e6113a5565b606091505b50809350819250505080611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806130446023913960400191505060405180910390fd5b61140f8260006125b9565b92505050919050565b611420611925565b611492576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061155c43611d62565b905090565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920564d2063616e2063616c6c0000000000000000000000000000000081525060200191505060405180910390fd5b61160e838383612282565b505050565b61161d8282612765565b5050565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611692578051825260208201915060208101905060208303925061166f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146116f2576040519150601f19603f3d011682016040523d82523d6000602084013e6116f7565b606091505b50809350819250505080611756576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180612eac6035913960400191505060405180910390fd5b61176182600061256a565b9250505090565b60006060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106117bd578051825260208201915060208101905060208303925061179a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106118245780518252602082019150602081019050602083039250611801565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611884576040519150601f19603f3d011682016040523d82523d6000602084013e611889565b606091505b508093508192505050806118e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806130136031913960400191505060405180910390fd5b6118f382600061256a565b92505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119676128b5565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61198b611925565b6119fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008111611a56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612dde602c913960400191505060405180910390fd5b806002819055507f337b24e614d34558109f3dee80fbcb3c5a4b08a6611bee45581772f64d1681e5816040518082815260200191505060405180910390a150565b6000611aa243610f73565b905090565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611b185780518252602082019150602081019050602083039250611af5565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611b78576040519150601f19603f3d011682016040523d82523d6000602084013e611b7d565b606091505b50809350819250505080611bdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612d8a602e913960400191505060405180910390fd5b611be782600061256a565b92505050919050565b60008160405160200180828152602001915050604051602081830303815290604052805190602001209050919050565b60006060600060f873ffffffffffffffffffffffffffffffffffffffff166040516020016040516020818303038152906040526040518082805190602001908083835b60208310611c865780518252602082019150602081019050602083039250611c63565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611ce6576040519150601f19603f3d011682016040523d82523d6000602084013e611ceb565b606091505b50809350819250505080611d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612f876025913960400191505060405180910390fd5b611d5582600061256a565b9250505090565b60025481565b6000611da66003611d986002611d8a6002611d7c88611aa7565b6128bd90919063ffffffff16565b61294390919063ffffffff16565b6129cb90919063ffffffff16565b9050919050565b6000611db9838361264a565b905092915050565b60016020528060005260406000206000915090505481565b60008060008714158015611dee575060008514155b611e60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310611efa5780518252602082019150602081019050602083039250611ed7565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611f5a576040519150601f19603f3d011682016040523d82523d6000602084013e611f5f565b606091505b50809250819350505081611fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612f606027913960400191505060405180910390fd5b611fc981600061256a565b9350611fd681602061256a565b925083839550955050505050965096945050505050565b611ff5611925565b612067576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61207081612a15565b50565b60006060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120e457805182526020820191506020810190506020830392506120c1565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612144576040519150601f19603f3d011682016040523d82523d6000602084013e612149565b606091505b508093508192505050806121a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612fe7602c913960400191505060405180910390fd5b6121b38260006125b9565b92505050919050565b60006121c8824361264a565b9050919050565b600060149054906101000a900460ff1615612252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061227633612a15565b61227f81611983565b50565b61228e6000801b611bf0565b821415612303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f63616e6e6f7420636f6d6d6974207a65726f2072616e646f6d6e65737300000081525060200191505060405180910390fd5b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612452576000801b8314156123a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180612fac603b913960400191505060405180910390fd5b60006123b384611bf0565b9050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811461244c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612e0a602d913960400191505060405180910390fd5b506124ae565b6000801b83146124ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180612d4e603c913960400191505060405180910390fd5b5b60008043146124d0576124cb600143612b5990919063ffffffff16565b6124d3565b60005b905061252043600360008481526020019081526020016000205486604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120612765565b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600061257683836125b9565b60001c905092915050565b60008082848161258d57fe5b049050600083858161259b57fe5b0614156125ab57809150506125b3565b600181019150505b92915050565b60006020820183511015612635576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b6000818311156126a5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612f386028913960400191505060405180910390fd5b6006548314806126f457506126c560055483612b5990919063ffffffff16565b831180156126f35750816002541015806126f257506126ef60025483612b5990919063ffffffff16565b83115b5b5b612749576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806130676035913960400191505060405180910390fd5b6003600084815260200190815260200160002054905092915050565b8060036000848152602001908152602001600020819055506000612787611c20565b838161278f57fe5b0614156127c85760045460065410156127bc57600360006006548152602001908152602001600020600090555b816006819055506128b1565b600060055414156127e7578160048190555060016005819055506128b0565b6002546005541115612859576127fe600454612ba3565b61281c612817600160045461294390919063ffffffff16565b612ba3565b612832600260045461294390919063ffffffff16565b60048190555061284e6001600554612b5990919063ffffffff16565b6005819055506128af565b600254600554141561289157612870600454612ba3565b612886600160045461294390919063ffffffff16565b6004819055506128ae565b6128a7600160055461294390919063ffffffff16565b6005819055505b5b5b5b5050565b600033905090565b6000808314156128d0576000905061293d565b60008284029050828482816128e157fe5b0414612938576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f176021913960400191505060405180910390fd5b809150505b92915050565b6000808284019050838110156129c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612a0d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612bc7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612db86026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000612b9b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c8d565b905092915050565b6006548114612bc45760036000828152602001908152602001600020600090555b50565b60008083118290612c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c38578082015181840152602081019050612c1d565b50505050905090810190601f168015612c655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612c7f57fe5b049050809150509392505050565b6000838311158290612d3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612cff578082015181840152602081019050612ce4565b50505050905090810190601f168015612d2c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe72616e646f6d6e6573732073686f756c64206265207a65726f206966207468657265206973206e6f2070726576696f757320636f6d6d69746d656e746572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737372616e646f6d6e657373426c6f636b5265746574696f6e57696e646f772063616e6e6f74206265207a65726f636f6d6d69746d656e74206469646e2774206d617463682074686520706f737465642072616e646f6d6e6573736572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e6e6f742071756572792072616e646f6d6e657373206f662066757475726520626c6f636b736572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c6572616e646f6d6e6573732063616e6e6f74206265207a65726f20696620746865726520697320612070726576696f757320636f6d6d69746d656e746572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c656572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e67206861736848656164657220707265636f6d70696c6543616e6e6f742071756572792072616e646f6d6e657373206f6c646572207468616e207468652073746f72656420686973746f7279a165627a7a723058208d8b0bfd20cdd460017dc5d9c009f68f1025a219b8c7c53bdf26662ab43809ff0029",
  "sourceMap": "50:485:107:-;;;698:17:129;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;50:485:107;;788:96:125;833:15;867:10;860:17;;788:96;:::o;50:485:107:-;;;;;;;",
  "deployedSourceMap": "50:485:107:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:485:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:169;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;364:169:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3654:367:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3654:367:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;52:23:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6149:266:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6149:266:16;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6149:266:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6149:266:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6149:266:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6149:266:16;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6149:266:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6149:266:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6149:266:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6149:266:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2496:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2496:147:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8299:343;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8299:343:16;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8299:343:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8299:343:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8299:343:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8299:343:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4325:378;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4325:378:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5379:115:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6991:288:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6991:288:16;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6991:288:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6991:288:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6991:288:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6991:288:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:129;;;:::i;:::-;;9831:112:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2274:176:96;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2274:176:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;84:126:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;84:126:107;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4840:326:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6544:329;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6544:329:16;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6544:329:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6544:329:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6544:329:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6544:329:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;899:77:129;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1444:247:96;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1444:247:96;;;;;;;;;;;;;;;;;:::i;:::-;;2744:109:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5382:321;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5382:321:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5126:134:96;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5126:134:96;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2066:266:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;578:45:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9552:147:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9552:147:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;213:148:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;213:148:107;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;527:46:96;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;527:46:96;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1185:763:16;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1185:763:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1970:107:129;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:129;;;;;;;;;;;;;;;;;;;:::i;:::-;;7570:322:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7570:322:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5695:145:96;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5695:145:96;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1057:195;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1057:195:96;;;;;;;;;;;;;;;;;:::i;:::-;;364:169:107;475:53;492:10;504:13;519:8;475:16;:53::i;:::-;364:169;;;:::o;3654:367:16:-;3736:7;3751:16;3773:12;350:8;3808:24;;3850:5;3865:12;3833:46;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3833:46:16;;;3808:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3808:72:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3791:89:16;;;;;;;;3894:7;3886:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3988:27;4008:3;4013:1;3988:19;:27::i;:::-;3973:43;;;;3654:367;;;:::o;52:23:10:-;;;;;;;;;;;;;:::o;6149:266:16:-;6272:4;6286:12;296:8;6318:30;;6366:6;6374;6382;6349:40;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6349:40:16;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6349:40:16;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6349:40:16;;;6318:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6318:72:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6304:86:16;;;;;6403:7;6396:14;;;6149:266;;;;;:::o;2496:147::-;2569:7;2591:47;2610:11;2623:14;:12;:14::i;:::-;2591:18;:47::i;:::-;2584:54;;2496:147;;;:::o;8299:343::-;8382:7;8397:16;8419:12;705:9;8454:35;;8507:6;8490:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8490:24:16;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8490:24:16;;;8454:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8454:61:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8437:78:16;;;;;;;;8529:7;8521:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8610:27;8630:3;8635:1;8610:19;:27::i;:::-;8603:34;;;;8299:343;;;:::o;4325:378::-;4433:7;4450:16;4472:12;350:8;4507:24;;4549:5;4556:11;4532:36;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4532:36:16;;;4507:62;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4507:62:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4490:79:16;;;;;;;;4583:7;4575:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4670:27;4690:3;4695:1;4670:19;:27::i;:::-;4655:43;;;;4325:378;;;;:::o;5379:115:96:-;5420:7;5442:47;5462:12;5476;5442:19;:47::i;:::-;5435:54;;5379:115;:::o;6991:288:16:-;7053:7;7068:16;7090:12;576:8;7125:22;;7165:6;7148:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7148:24:16;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7148:24:16;;;7125:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7125:48:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7108:65:16;;;;;;;;7187:7;7179:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7247:27;7267:3;7272:1;7247:19;:27::i;:::-;7240:34;;;;6991:288;;;:::o;1684:137:129:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;9831:112:16:-;9889:7;9911:27;9925:12;9911:13;:27::i;:::-;9904:34;;9831:112;:::o;2274:176:96:-;103:1:2;81:24;;:10;:24;;;73:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392::96;2409:10;2421:13;2436:8;2392:16;:53::i;:::-;2274:176;;;:::o;84:126:107:-;167:38;181:11;194:10;167:13;:38::i;:::-;84:126;;:::o;4840:326:16:-;4901:7;4916:16;4938:12;408:8;4973:28;;5027:12;5002:39;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5002:39:16;;;4973:69;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4973:69:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4956:86:16;;;;;;;;5056:7;5048:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5134:27;5154:3;5159:1;5134:19;:27::i;:::-;5127:34;;;;4840:326;:::o;6544:329::-;6620:7;6635:16;6657:12;524:8;6692:35;;6745:6;6728:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6728:24:16;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6728:24:16;;;6692:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6692:61:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6675:78:16;;;;;;;;6767:7;6759:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6841:27;6861:3;6866:1;6841:19;:27::i;:::-;6834:34;;;;6544:329;;;:::o;899:77:129:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;1444:247:96:-;1103:9:129;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:1:96;1533:5;:9;1525:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:5;1597:30;:38;;;;1646:40;1680:5;1646:40;;;;;;;;;;;;;;;;;;1444:247;:::o;2744:109:16:-;2791:7;2813:35;2835:12;2813:21;:35::i;:::-;2806:42;;2744:109;:::o;5382:321::-;5455:7;5470:16;5492:12;408:8;5527:28;;5573:11;5556:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5556:29:16;;;5527:59;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5527:59:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5510:76:16;;;;;;;;5600:7;5592:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5671:27;5691:3;5696:1;5671:19;:27::i;:::-;5664:34;;;;5382:321;;;:::o;5126:134:96:-;5194:7;5243:10;5226:28;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5226:28:96;;;5216:39;;;;;;5209:46;;5126:134;;;:::o;2066:266:16:-;2111:7;2126:16;2148:12;459:8;2183:21;;2205:18;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2205:18:16;;;2183:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2183:41:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2166:58:16;;;;;;;;2238:7;2230:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:27;2320:3;2325:1;2300:19;:27::i;:::-;2293:34;;;;2066:266;:::o;578:45:96:-;;;;:::o;9552:147:16:-;9617:7;9639:55;9692:1;9639:48;9685:1;9639:41;9678:1;9639:34;9661:11;9639:21;:34::i;:::-;:38;;:41;;;;:::i;:::-;:45;;:48;;;;:::i;:::-;:52;;:55;;;;:::i;:::-;9632:62;;9552:147;;;:::o;213:148:107:-;297:7;319:37;339:11;352:3;319:19;:37::i;:::-;312:44;;213:148;;;;:::o;527:46:96:-;;;;;;;;;;;;;;;;;:::o;1185:763:16:-;1379:7;1388;1427:1;1411:12;:17;;:38;;;;;1448:1;1432:12;:17;;1411:38;1403:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1481:23;1510:25;1541:12;1559:16;236:8;1598:23;;1646:10;1658:12;1672:10;1684:12;1698:8;1708:9;1629:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1629:89:16;;;1598:126;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1598:126:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1581:143:16;;;;;;;;1738:7;1730:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1813:27;1833:3;1838:1;1813:19;:27::i;:::-;1795:45;;1866:28;1886:3;1891:2;1866:19;:28::i;:::-;1846:48;;1908:15;1925:17;1900:43;;;;;;;;1185:763;;;;;;;;;:::o;1970:107:129:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;7570:322:16:-;7641:7;7656:16;7678:12;639:9;7713:33;;7764:11;7747:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7747:29:16;;;7713:64;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7713:64:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7696:81:16;;;;;;;;7791:7;7783:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7860:27;7880:3;7885:1;7860:19;:27::i;:::-;7853:34;;;;7570:322;;;:::o;5695:145:96:-;5767:7;5789:46;5809:11;5822:12;5789:19;:46::i;:::-;5782:53;;5695:145;;;:::o;1057:195::-;118:11:10;;;;;;;;;;;117:12;109:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;182:4;168:11;;:18;;;;;;;;;;;;;;;;;;1145:30:96;1164:10;1145:18;:30::i;:::-;1181:66;1215:31;1181:33;:66::i;:::-;1057:195;:::o;2730:927::-;2857:20;2875:1;2857:20;;:17;:20::i;:::-;2840:13;:37;;2832:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:1;2984:26;;:11;:21;2996:8;2984:21;;;;;;;;;;;;;;;;:26;2980:442;;3042:1;3028:15;;:10;:15;;3020:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3115:26;3144:29;3162:10;3144:17;:29::i;:::-;3115:58;;3220:11;:21;3232:8;3220:21;;;;;;;;;;;;;;;;3198:18;:43;3181:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2980:442;;;;3349:1;3335:15;;:10;:15;3327:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2980:442;3447:19;3485:1;3469:12;:17;:43;;3493:19;3510:1;3493:12;:16;;:19;;;;:::i;:::-;3469:43;;;3489:1;3469:43;3447:65;;3518:90;3532:12;3573:7;:20;3581:11;3573:20;;;;;;;;;;;;3595:10;3556:50;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3556:50:96;;;3546:61;;;;;;3518:13;:90::i;:::-;3639:13;3615:11;:21;3627:8;3615:21;;;;;;;;;;;;;;;:37;;;;2730:927;;;;:::o;8802:150:16:-;8886:7;8916:30;8936:2;8940:5;8916:19;:30::i;:::-;8908:39;;8901:46;;8802:150;;;;:::o;3065:376::-;3168:7;3276:19;3312:9;3298:11;:23;;;;;;3276:45;;3358:1;3345:9;3331:11;:23;;;;;;:28;3327:110;;;3376:11;3369:18;;;;;3327:110;3429:1;3415:11;:15;3408:22;;;3065:376;;;;;:::o;9112:252::-;9196:7;9240:2;9232:5;:10;9219:2;:9;:23;;9211:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9273:9;9335:2;9328:5;9324:14;9320:2;9316:23;9310:30;9305:35;;9358:1;9351:8;;;9112:252;;;;:::o;6086:499:96:-;6172:7;6210:3;6195:11;:18;;6187:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6294:14;;6279:11;:29;:199;;;;6335:20;6343:11;;6335:3;:7;;:20;;;;:::i;:::-;6321:11;:34;:156;;;;;6404:3;6370:30;;:37;;:106;;;;6437:39;6445:30;;6437:3;:7;;:39;;;;:::i;:::-;6423:11;:53;6370:106;6321:156;6279:199;6264:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6560:7;:20;6568:11;6560:20;;;;;;;;;;;;6553:27;;6086:499;;;;:::o;3972:956::-;4074:10;4051:7;:20;4059:11;4051:20;;;;;;;;;;;:33;;;;4126:1;4108:14;:12;:14::i;:::-;4094:11;:28;;;;;;:33;4090:834;;;4158:12;;4141:14;;:29;4137:84;;;4189:7;:23;4197:14;;4189:23;;;;;;;;;;;4182:30;;;4137:84;4245:11;4228:14;:28;;;;4090:834;;;4296:1;4281:11;;:16;4277:641;;;4324:11;4309:12;:26;;;;4359:1;4345:11;:15;;;;4277:641;;;4393:30;;4379:11;;:44;4375:543;;;4435:46;4468:12;;4435:32;:46::i;:::-;4491:53;4524:19;4541:1;4524:12;;:16;;:19;;;;:::i;:::-;4491:32;:53::i;:::-;4569:19;4586:1;4569:12;;:16;;:19;;;;:::i;:::-;4554:12;:34;;;;4612:18;4628:1;4612:11;;:15;;:18;;;;:::i;:::-;4598:11;:32;;;;4375:543;;;4664:30;;4649:11;;:45;4645:273;;;4706:46;4739:12;;4706:32;:46::i;:::-;4777:19;4794:1;4777:12;;:16;;:19;;;;:::i;:::-;4762:12;:34;;;;4645:273;;;4891:18;4907:1;4891:11;;:15;;:18;;;;:::i;:::-;4877:11;:32;;;;4645:273;4375:543;4277:641;4090:834;3972:956;;:::o;788:96:125:-;833:15;867:10;860:17;;788:96;:::o;2159:459:128:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;2178:225:129:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1274:134:128:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;6589:159:96:-;6686:14;;6671:11;:29;6667:77;;6717:7;:20;6725:11;6717:20;;;;;;;;;;;6710:27;;;6667:77;6589:159;:::o;3718:338:128:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o",
  "source": "pragma solidity ^0.5.3;\n\nimport \"../Random.sol\";\n\ncontract TestRandom is Random {\n  function addTestRandomness(uint256 blockNumber, bytes32 randomness) external {\n    addRandomness(blockNumber, randomness);\n  }\n  function getTestRandomness(uint256 blockNumber, uint256 cur) external view returns (bytes32) {\n    return _getBlockRandomness(blockNumber, cur);\n  }\n  function testRevealAndCommit(bytes32 randomness, bytes32 newCommitment, address proposer)\n    external\n  {\n    _revealAndCommit(randomness, newCommitment, proposer);\n  }\n}\n",
  "sourcePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol",
  "ast": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol",
    "exportedSymbols": {
      "TestRandom": [
        31154
      ]
    },
    "id": 31155,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31106,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:107"
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol",
        "file": "../Random.sol",
        "id": 31107,
        "nodeType": "ImportDirective",
        "scope": 31155,
        "sourceUnit": 30592,
        "src": "25:23:107",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31108,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30591,
              "src": "73:6:107",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$30591",
                "typeString": "contract Random"
              }
            },
            "id": 31109,
            "nodeType": "InheritanceSpecifier",
            "src": "73:6:107"
          }
        ],
        "contractDependencies": [
          1450,
          3153,
          5824,
          30591,
          30805,
          35967,
          36422
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 31154,
        "linearizedBaseContracts": [
          31154,
          30591,
          1450,
          5824,
          3153,
          36422,
          35967,
          30805
        ],
        "name": "TestRandom",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 31121,
              "nodeType": "Block",
              "src": "161:49:107",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31117,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31111,
                        "src": "181:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31118,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31113,
                        "src": "194:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 31116,
                      "name": "addRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30484,
                      "src": "167:13:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 31119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "167:38:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31120,
                  "nodeType": "ExpressionStatement",
                  "src": "167:38:107"
                }
              ]
            },
            "documentation": null,
            "id": 31122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31111,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 31122,
                  "src": "111:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "111:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31113,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 31122,
                  "src": "132:18:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "110:41:107"
            },
            "returnParameters": {
              "id": 31115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:107"
            },
            "scope": 31154,
            "src": "84:126:107",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 31136,
              "nodeType": "Block",
              "src": "306:55:107",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31132,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31124,
                        "src": "339:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31133,
                        "name": "cur",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31126,
                        "src": "352:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31131,
                      "name": "_getBlockRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30574,
                      "src": "319:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 31134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:37:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 31130,
                  "id": 31135,
                  "nodeType": "Return",
                  "src": "312:44:107"
                }
              ]
            },
            "documentation": null,
            "id": 31137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31124,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 31137,
                  "src": "240:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "240:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31126,
                  "name": "cur",
                  "nodeType": "VariableDeclaration",
                  "scope": 31137,
                  "src": "261:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "239:34:107"
            },
            "returnParameters": {
              "id": 31130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31129,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31137,
                  "src": "297:7:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31128,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:9:107"
            },
            "scope": 31154,
            "src": "213:148:107",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 31152,
              "nodeType": "Block",
              "src": "469:64:107",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31147,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31139,
                        "src": "492:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31148,
                        "name": "newCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31141,
                        "src": "504:13:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31149,
                        "name": "proposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31143,
                        "src": "519:8:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31146,
                      "name": "_revealAndCommit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30380,
                      "src": "475:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 31150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:53:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31151,
                  "nodeType": "ExpressionStatement",
                  "src": "475:53:107"
                }
              ]
            },
            "documentation": null,
            "id": 31153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevealAndCommit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31139,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 31153,
                  "src": "393:18:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31141,
                  "name": "newCommitment",
                  "nodeType": "VariableDeclaration",
                  "scope": 31153,
                  "src": "413:21:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31140,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31143,
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 31153,
                  "src": "436:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:61:107"
            },
            "returnParameters": {
              "id": 31145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:0:107"
            },
            "scope": 31154,
            "src": "364:169:107",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 31155,
        "src": "50:485:107"
      }
    ],
    "src": "0:536:107"
  },
  "legacyAST": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/test/TestRandom.sol",
    "exportedSymbols": {
      "TestRandom": [
        31154
      ]
    },
    "id": 31155,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31106,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:107"
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/identity/Random.sol",
        "file": "../Random.sol",
        "id": 31107,
        "nodeType": "ImportDirective",
        "scope": 31155,
        "sourceUnit": 30592,
        "src": "25:23:107",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31108,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30591,
              "src": "73:6:107",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$30591",
                "typeString": "contract Random"
              }
            },
            "id": 31109,
            "nodeType": "InheritanceSpecifier",
            "src": "73:6:107"
          }
        ],
        "contractDependencies": [
          1450,
          3153,
          5824,
          30591,
          30805,
          35967,
          36422
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 31154,
        "linearizedBaseContracts": [
          31154,
          30591,
          1450,
          5824,
          3153,
          36422,
          35967,
          30805
        ],
        "name": "TestRandom",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 31121,
              "nodeType": "Block",
              "src": "161:49:107",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31117,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31111,
                        "src": "181:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31118,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31113,
                        "src": "194:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 31116,
                      "name": "addRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30484,
                      "src": "167:13:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 31119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "167:38:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31120,
                  "nodeType": "ExpressionStatement",
                  "src": "167:38:107"
                }
              ]
            },
            "documentation": null,
            "id": 31122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31111,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 31122,
                  "src": "111:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "111:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31113,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 31122,
                  "src": "132:18:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "110:41:107"
            },
            "returnParameters": {
              "id": 31115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:107"
            },
            "scope": 31154,
            "src": "84:126:107",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 31136,
              "nodeType": "Block",
              "src": "306:55:107",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31132,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31124,
                        "src": "339:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31133,
                        "name": "cur",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31126,
                        "src": "352:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31131,
                      "name": "_getBlockRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30574,
                      "src": "319:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 31134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:37:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 31130,
                  "id": 31135,
                  "nodeType": "Return",
                  "src": "312:44:107"
                }
              ]
            },
            "documentation": null,
            "id": 31137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31124,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 31137,
                  "src": "240:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "240:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31126,
                  "name": "cur",
                  "nodeType": "VariableDeclaration",
                  "scope": 31137,
                  "src": "261:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "239:34:107"
            },
            "returnParameters": {
              "id": 31130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31129,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31137,
                  "src": "297:7:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31128,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:9:107"
            },
            "scope": 31154,
            "src": "213:148:107",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 31152,
              "nodeType": "Block",
              "src": "469:64:107",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31147,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31139,
                        "src": "492:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31148,
                        "name": "newCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31141,
                        "src": "504:13:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31149,
                        "name": "proposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31143,
                        "src": "519:8:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31146,
                      "name": "_revealAndCommit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30380,
                      "src": "475:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 31150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:53:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31151,
                  "nodeType": "ExpressionStatement",
                  "src": "475:53:107"
                }
              ]
            },
            "documentation": null,
            "id": 31153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevealAndCommit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31139,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 31153,
                  "src": "393:18:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31141,
                  "name": "newCommitment",
                  "nodeType": "VariableDeclaration",
                  "scope": 31153,
                  "src": "413:21:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31140,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31143,
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 31153,
                  "src": "436:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:61:107"
            },
            "returnParameters": {
              "id": 31145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:0:107"
            },
            "scope": 31154,
            "src": "364:169:107",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 31155,
        "src": "50:485:107"
      }
    ],
    "src": "0:536:107"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2020-04-09T23:11:37.554Z",
  "devdoc": {
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "return": "True upon success."
      },
      "computeCommitment(bytes32)": {
        "params": {
          "randomness": "The value for which the commitment hash is computed."
        },
        "return": "Commitment parameter."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "return": "numerator/denominator of the computed quantity (not reduced)."
      },
      "getBlockNumberFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Block number."
      },
      "getBlockRandomness(uint256)": {
        "params": {
          "blockNumber": "The number of block whose randomness value we want to know."
        },
        "return": "The associated randomness value."
      },
      "getEpochNumber()": {
        "return": "Current epoch number."
      },
      "getEpochNumberOfBlock(uint256)": {
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "return": "Epoch number."
      },
      "getEpochSize()": {
        "return": "The current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve. Must be within 4 epochs of the current number."
        },
        "return": "Bitmap parent seal with set bits at indices corresponding to signing validators."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Bitmap parent seal with set bits at indices correspoinding to signing validators."
      },
      "hashHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Header hash."
      },
      "initialize(uint256)": {
        "params": {
          "_randomnessBlockRetentionWindow": "Number of old random blocks whose randomness values can be queried."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))"
      },
      "minQuorumSizeInCurrentSet()": {
        "return": "Byzantine quorum of validators."
      },
      "numberValidatorsInCurrentSet()": {
        "return": "Size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from."
        },
        "return": "Size of the validator set."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "random()": {
        "return": "Returns the current randomness value."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revealAndCommit(bytes32,bytes32,address)": {
        "details": "If the Random contract is pointed to by the Registry, the first transaction in a block should be a special transaction to address 0x0 with 64 bytes of data - the concatenated `randomness` and `newCommitment`. Before running regular transactions, this function should be called.",
        "params": {
          "newCommitment": "The hash of randomness that will be revealed in the future.",
          "proposer": "Address of the block proposer.",
          "randomness": "Bytes that will be added to the entropy pool."
        }
      },
      "setRandomnessBlockRetentionWindow(uint256)": {
        "params": {
          "value": "Number of old random blocks whose randomness values can be queried."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from.",
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "computeCommitment(bytes32)": {
        "notice": "Compute the commitment hash for a given randomness value."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getBlockNumberFromHeader(bytes)": {
        "notice": "Parses block number out of header."
      },
      "getBlockRandomness(uint256)": {
        "notice": "Get randomness values of previous blocks."
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "notice": "Gets the parent seal bitmap from the header at the given block number."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "notice": "Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails."
      },
      "hashHeader(bytes)": {
        "notice": "Computes hash of header."
      },
      "initialize(uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInCurrentSet()": {
        "notice": "Gets the size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "notice": "Gets the size of the validator set that must sign the given block number."
      },
      "random()": {
        "notice": "Querying the current randomness value."
      },
      "revealAndCommit(bytes32,bytes32,address)": {
        "notice": "Implements step of the randomness protocol."
      },
      "setRandomnessBlockRetentionWindow(uint256)": {
        "notice": "Sets the number of old random blocks whose randomness values can be queried."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator address from the current validator set."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "notice": "Gets a validator address from the validator set at the given block number."
      }
    }
  }
}