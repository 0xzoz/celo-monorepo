{
  "contractName": "Freezer",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isFrozen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "freeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "unfreeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"freeze(address)\":{\"params\":{\"target\":\"The address of the contract to freeze.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unfreeze(address)\":{\"params\":{\"target\":\"The address of the contract to freeze.\"}}}},\"userdoc\":{\"methods\":{\"freeze(address)\":{\"notice\":\"Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\"},\"unfreeze(address)\":{\"notice\":\"Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Freezer.sol\":\"Freezer\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Freezer.sol\":{\"keccak256\":\"0x9beb04f935d89958dfb0aff95455763e95a3686478ce04684a327cd2877726d4\",\"urls\":[\"bzzr://6ead70700f07ffaa5d2611794dd7c642f5c00ec77d432e7d12aad1a133ff314f\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xde9244bb7f97bb88c3baed0d0493da42f0b5c6cc05d295bfd3e570745996453a\",\"urls\":[\"bzzr://ff5098f98a204e3e2258f5d84edef49c280ade6f0328b69eab87dd218bedbb98\"]},\"/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IFreezer.sol\":{\"keccak256\":\"0x3328bdfb02ac3fcec51261c76515e5490642de377a2c5a8a6edb876dbf8aa17a\",\"urls\":[\"bzzr://f95bcc8e1888a59705ff94f6db6b0cf4d46c758c364ec695acd3241d2fc59012\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]}},\"version\":1}",
  "bytecode": "0x608060405260006100146100b760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100bf565b600033905090565b6108cb806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638d1fdf2f116100665780638d1fdf2f146101125780638da5cb5b146101565780638f32d59b146101a0578063e5839836146101c2578063f2fde38b1461021e57610093565b8063158ef93e1461009857806345c8b1a6146100ba578063715018a6146100fe5780638129fc1c14610108575b600080fd5b6100a0610262565b604051808215151515815260200191505060405180910390f35b6100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610275565b005b61010661034a565b005b610110610483565b005b6101546004803603602081101561012857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052c565b005b61015e610600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a8610629565b604051808215151515815260200191505060405180910390f35b610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610687565b604051808215151515815260200191505060405180910390f35b6102606004803603602081101561023457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b005b600060149054906101000a900460ff1681565b61027d610629565b6102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610352610629565b6103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1615610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061052a3361072d565b565b610534610629565b6105a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661066b610871565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6106af610629565b610721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61072a8161072d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061087a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a72305820e78c0d9655c731f52b541552627a69c78e9d10463986b4ef12ff39f27e53656d0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638d1fdf2f116100665780638d1fdf2f146101125780638da5cb5b146101565780638f32d59b146101a0578063e5839836146101c2578063f2fde38b1461021e57610093565b8063158ef93e1461009857806345c8b1a6146100ba578063715018a6146100fe5780638129fc1c14610108575b600080fd5b6100a0610262565b604051808215151515815260200191505060405180910390f35b6100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610275565b005b61010661034a565b005b610110610483565b005b6101546004803603602081101561012857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052c565b005b61015e610600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a8610629565b604051808215151515815260200191505060405180910390f35b610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610687565b604051808215151515815260200191505060405180910390f35b6102606004803603602081101561023457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b005b600060149054906101000a900460ff1681565b61027d610629565b6102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610352610629565b6103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1615610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061052a3361072d565b565b610534610629565b6105a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661066b610871565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6106af610629565b610721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61072a8161072d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061087a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a72305820e78c0d9655c731f52b541552627a69c78e9d10463986b4ef12ff39f27e53656d0029",
  "sourceMap": "157:669:7:-;;;698:17:129;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;157:669:7;;788:96:125;833:15;867:10;860:17;;788:96;:::o;157:669:7:-;;;;;;;",
  "deployedSourceMap": "157:669:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;157:669:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52:23:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;736:88:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;736:88:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:129;;;:::i;:::-;;259:84:7;;;:::i;:::-;;500:85;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;500:85:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;899:77:129;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;214:40:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;214:40:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1970:107:129;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:129;;;;;;;;;;;;;;;;;;;:::i;:::-;;52:23:10;;;;;;;;;;;;;:::o;736:88:7:-;1103:9:129;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:5:7;795:8;:16;804:6;795:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;736:88;:::o;1684:137:129:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;259:84:7:-;118:11:10;;;;;;;;;;;117:12;109:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;182:4;168:11;;:18;;;;;;;;;;;;;;;;;;308:30:7;327:10;308:18;:30::i;:::-;259:84::o;500:85::-;1103:9:129;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:4:7;557:8;:16;566:6;557:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;500:85;:::o;899:77:129:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;214:40:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;1970:107:129:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;2178:225::-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;788:96:125:-;833:15;867:10;860:17;;788:96;:::o",
  "source": "pragma solidity ^0.5.3;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./Initializable.sol\";\nimport \"./interfaces/IFreezer.sol\";\n\ncontract Freezer is Ownable, Initializable, IFreezer {\n  mapping(address => bool) public isFrozen;\n\n  function initialize() external initializer {\n    _transferOwnership(msg.sender);\n  }\n\n  /**\n   * @notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n   * @param target The address of the contract to freeze.\n   */\n  function freeze(address target) external onlyOwner {\n    isFrozen[target] = true;\n  }\n\n  /**\n   * @notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n   * @param target The address of the contract to freeze.\n   */\n  function unfreeze(address target) external onlyOwner {\n    isFrozen[target] = false;\n  }\n}\n",
  "sourcePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Freezer.sol",
  "ast": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Freezer.sol",
    "exportedSymbols": {
      "Freezer": [
        2225
      ]
    },
    "id": 2226,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2172,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2173,
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 36423,
        "src": "25:63:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 2174,
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 3154,
        "src": "90:29:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IFreezer.sol",
        "file": "./interfaces/IFreezer.sol",
        "id": 2175,
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 6512,
        "src": "120:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2176,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36422,
              "src": "177:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$36422",
                "typeString": "contract Ownable"
              }
            },
            "id": 2177,
            "nodeType": "InheritanceSpecifier",
            "src": "177:7:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2178,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3153,
              "src": "186:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3153",
                "typeString": "contract Initializable"
              }
            },
            "id": 2179,
            "nodeType": "InheritanceSpecifier",
            "src": "186:13:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2180,
              "name": "IFreezer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6511,
              "src": "201:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFreezer_$6511",
                "typeString": "contract IFreezer"
              }
            },
            "id": 2181,
            "nodeType": "InheritanceSpecifier",
            "src": "201:8:7"
          }
        ],
        "contractDependencies": [
          3153,
          6511,
          35967,
          36422
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2225,
        "linearizedBaseContracts": [
          2225,
          6511,
          3153,
          36422,
          35967
        ],
        "name": "Freezer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2185,
            "name": "isFrozen",
            "nodeType": "VariableDeclaration",
            "scope": 2225,
            "src": "214:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2184,
              "keyType": {
                "id": 2182,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "222:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "214:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2183,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "233:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2195,
              "nodeType": "Block",
              "src": "302:41:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37340,
                          "src": "327:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "327:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2190,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36421,
                      "src": "308:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "308:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2194,
                  "nodeType": "ExpressionStatement",
                  "src": "308:30:7"
                }
              ]
            },
            "documentation": null,
            "id": 2196,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2188,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2187,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3152,
                  "src": "290:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "290:11:7"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:7"
            },
            "returnParameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:0:7"
            },
            "scope": 2225,
            "src": "259:84:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2209,
              "nodeType": "Block",
              "src": "551:34:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2203,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "557:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2205,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2204,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2198,
                        "src": "566:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "557:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "576:4:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "557:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2208,
                  "nodeType": "ExpressionStatement",
                  "src": "557:23:7"
                }
              ]
            },
            "documentation": "@notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
            "id": 2210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2201,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2200,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36355,
                  "src": "541:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "541:9:7"
              }
            ],
            "name": "freeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2198,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "516:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "515:16:7"
            },
            "returnParameters": {
              "id": 2202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:7"
            },
            "scope": 2225,
            "src": "500:85:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2223,
              "nodeType": "Block",
              "src": "789:35:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2217,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "795:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2219,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2218,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2212,
                        "src": "804:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "795:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "814:5:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "795:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2222,
                  "nodeType": "ExpressionStatement",
                  "src": "795:24:7"
                }
              ]
            },
            "documentation": "@notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
            "id": 2224,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2214,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36355,
                  "src": "779:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "779:9:7"
              }
            ],
            "name": "unfreeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2212,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 2224,
                  "src": "754:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "753:16:7"
            },
            "returnParameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:0:7"
            },
            "scope": 2225,
            "src": "736:88:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2226,
        "src": "157:669:7"
      }
    ],
    "src": "0:827:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Freezer.sol",
    "exportedSymbols": {
      "Freezer": [
        2225
      ]
    },
    "id": 2226,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2172,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2173,
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 36423,
        "src": "25:63:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 2174,
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 3154,
        "src": "90:29:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cmcewen/celo/celo-monorepo/packages/protocol/contracts/common/interfaces/IFreezer.sol",
        "file": "./interfaces/IFreezer.sol",
        "id": 2175,
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 6512,
        "src": "120:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2176,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36422,
              "src": "177:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$36422",
                "typeString": "contract Ownable"
              }
            },
            "id": 2177,
            "nodeType": "InheritanceSpecifier",
            "src": "177:7:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2178,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3153,
              "src": "186:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3153",
                "typeString": "contract Initializable"
              }
            },
            "id": 2179,
            "nodeType": "InheritanceSpecifier",
            "src": "186:13:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2180,
              "name": "IFreezer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6511,
              "src": "201:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFreezer_$6511",
                "typeString": "contract IFreezer"
              }
            },
            "id": 2181,
            "nodeType": "InheritanceSpecifier",
            "src": "201:8:7"
          }
        ],
        "contractDependencies": [
          3153,
          6511,
          35967,
          36422
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2225,
        "linearizedBaseContracts": [
          2225,
          6511,
          3153,
          36422,
          35967
        ],
        "name": "Freezer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2185,
            "name": "isFrozen",
            "nodeType": "VariableDeclaration",
            "scope": 2225,
            "src": "214:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2184,
              "keyType": {
                "id": 2182,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "222:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "214:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2183,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "233:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2195,
              "nodeType": "Block",
              "src": "302:41:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37340,
                          "src": "327:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "327:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2190,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36421,
                      "src": "308:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "308:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2194,
                  "nodeType": "ExpressionStatement",
                  "src": "308:30:7"
                }
              ]
            },
            "documentation": null,
            "id": 2196,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2188,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2187,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3152,
                  "src": "290:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "290:11:7"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:7"
            },
            "returnParameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:0:7"
            },
            "scope": 2225,
            "src": "259:84:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2209,
              "nodeType": "Block",
              "src": "551:34:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2203,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "557:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2205,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2204,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2198,
                        "src": "566:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "557:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "576:4:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "557:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2208,
                  "nodeType": "ExpressionStatement",
                  "src": "557:23:7"
                }
              ]
            },
            "documentation": "@notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
            "id": 2210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2201,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2200,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36355,
                  "src": "541:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "541:9:7"
              }
            ],
            "name": "freeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2198,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "516:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "515:16:7"
            },
            "returnParameters": {
              "id": 2202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:7"
            },
            "scope": 2225,
            "src": "500:85:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2223,
              "nodeType": "Block",
              "src": "789:35:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2217,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "795:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2219,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2218,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2212,
                        "src": "804:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "795:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "814:5:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "795:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2222,
                  "nodeType": "ExpressionStatement",
                  "src": "795:24:7"
                }
              ]
            },
            "documentation": "@notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
            "id": 2224,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2214,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36355,
                  "src": "779:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "779:9:7"
              }
            ],
            "name": "unfreeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2212,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 2224,
                  "src": "754:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "753:16:7"
            },
            "returnParameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:0:7"
            },
            "scope": 2225,
            "src": "736:88:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2226,
        "src": "157:669:7"
      }
    ],
    "src": "0:827:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1101": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xd2e253F9f92E5ffb870E5b4909b503971e0d65D0",
      "transactionHash": "0x5c5e6ac72b09124daf5ee4cf20011b9c67171e881b0a5718487664bc4be6df4a"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2020-04-09T23:47:18.087Z",
  "devdoc": {
    "methods": {
      "freeze(address)": {
        "params": {
          "target": "The address of the contract to freeze."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unfreeze(address)": {
        "params": {
          "target": "The address of the contract to freeze."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "freeze(address)": {
        "notice": "Freezes the target contract, disabling `onlyWhenNotFrozen` functions."
      },
      "unfreeze(address)": {
        "notice": "Unfreezes the contract, enabling `onlyWhenNotFrozen` functions."
      }
    }
  }
}